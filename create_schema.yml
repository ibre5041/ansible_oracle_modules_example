---
# Segment 1.
- name: Inmemory inventory creation.
  hosts: all
  collections:
    - ibre5041.ansible_oracle_modules
  become: yes
  become_user: root
  become_method: sudo
  vars:
    # Uncomment this ORACLE_SID list if you want to constrain this playbook to certain databases only
    - db_list: [ TEST19C ]
  tasks:
    - oracle_oratab:
        writable_only: true
      register: sid_list

    - debug:
        var: sid_list

    # Strip the host string and parse it to the in memory inventory.
    # All the hosts will be added to the group,'server'. The playbook will be played in the group.
    - name: Database target
      add_host:
        groups: [oracle, oracledabase]
        name: '{{ inventory_hostname }}_{{ sid_list.oracle_list[item].ORACLE_SID }}'
        hostname: '{{ inventory_hostname }}'

        ansible_connection: ssh
        ansible_ssh_user: "{{ ansible_ssh_user }}"
        ansible_port: "{{ ansible_port }}"
        ansible_ssh_private_key_file: "{{ ansible_ssh_private_key_file }}"
        ansible_host: "{{ inventory_hostname }}"
          
        ORACLE_HOME:  "{{ sid_list.oracle_list[item].ORACLE_HOME }}"
        ORACLE_SID:   "{{ sid_list.oracle_list[item].ORACLE_SID }}"
        oracle_owner: "{{ sid_list.oracle_list[item].owner }}"
      loop: "{{ db_list | default(sid_list.oracle_list.keys())}}"
      changed_when: False

# Segment 2. Software Management.
- name: Oracle DB Management
  hosts: oracledabase
  collections:
    - ibre5041.ansible_oracle_modules  
  gather_facts: true
  tasks:
    - name: create tablespaces
      oracle_tablespace:
        mode: sysdba
        tablespace: app
        bigfile: true
        size: 10G
        autoextend: true

    - oracle_user:
        mode: sysdba
        schema: myschema
        authentication_type: none
        default_tablespace: app
        state: present

    - oracle_grant:
        mode: sysdba        
        schema: myschema
        state: present
        grants:
          - 'create session'
          - 'create any table'
          - connect
          - resource
          
  environment:                                                                                                                  
    ORACLE_HOME: "{{ ORACLE_HOME }}"
    ORACLE_SID:  "{{ ORACLE_SID }}"        
  become: yes
  become_user: "{{ oracle_owner }}"
  become_method: sudo  
