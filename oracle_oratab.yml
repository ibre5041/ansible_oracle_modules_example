---

# Modify sample inventory file: inventory/sample.restart.inventory.yml
#
# Install cx_Oracle python drivers in DB server
#  pip3 install oracledb
#   or as oracle user:
#  pip3 install --user oracledb
#
# Execute as:
#   ansible-playbook oracle_oratab.yml -i inventory/sample.restart.inventory.yml
#

# Segment 1 - detect databases in each server, create a target for each database
- name: Inmemory inventory creation.
  hosts: all
  collections:
    - ibre5041.ansible_oracle_modules
  become: yes
  become_user: root
  become_method: sudo
  vars:
    # Uncomment this ORACLE_SID list if you want to constrain this playbook to certain databases only
    # - db_list: [ TEST19C ]
  tasks:
    - oracle_oratab:
        writable_only: true
      register: sid_list

    - debug:
        var: sid_list

    - debug:
        msg: "{{ ansible_play_hosts | map('extract', hostvars, 'sid_list') | map(attribute='oracle_list') }}"
      run_once: yes
        
    # See notes in add_db_targets.yml
    - include_tasks: add_db_targets.yml
      loop: "{{ ansible_play_hosts | sort() }}"
      loop_control:
        loop_var: outer_item
      run_once: yes


# Segment 2
- name: Oracle DB Management
  # continue play, only members of oracledabase group are allower
  # these have variables dynamically set: ORACLE_HOME, ORACLE_SID, oracle_owner
  hosts: oracledatabase
  collections:
    - ibre5041.ansible_oracle_modules  
  gather_facts: true
  tasks:
    
    - name: Query database
      oracle_sql:
        mode: sysdba
        sql: select host_name, instance_name from v$instance;
      register: dbinfo

    - name: dbinfo
      debug:
        var: dbinfo

  environment:                                                                                                                  
    ORACLE_HOME: "{{ ORACLE_HOME }}"
    ORACLE_SID:  "{{ ORACLE_SID }}"        
  become: yes
  become_user: "{{ oracle_owner }}"
  become_method: sudo  
